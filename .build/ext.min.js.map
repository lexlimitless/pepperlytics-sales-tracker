{
  "version": 3,
  "sources": ["../node_modules/@stripe/ui-extension-sdk/version.js", "../node_modules/@stripe/ui-extension-sdk/ui/index.js", "manifest.js", "../src/views/CustomerDetails.tsx"],
  "sourcesContent": ["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SDK_VERSION = void 0;\nexports.SDK_VERSION = '9.0.0';\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.TableRow = exports.Table = exports.TableHeaderCell = exports.TableHead = exports.TableFooter = exports.TableCell = exports.TableBody = exports.Tab = exports.TabPanels = exports.TabPanel = exports.TabList = exports.Switch = exports.StripeFileUploader = exports.Spinner = exports.Sparkline = exports.SignInView = exports.SettingsView = exports.Select = exports.Radio = exports.PropertyList = exports.PropertyListItem = exports.PlatformConfigurationView = exports.OnboardingView = exports.Menu = exports.MenuItem = exports.MenuGroup = exports.List = exports.ListItem = exports.Link = exports.LineChart = exports.Inline = exports.Img = exports.Icon = exports.FormFieldGroup = exports.FocusView = exports.Divider = exports.DetailPageModule = exports.DateField = exports.ContextView = exports.Chip = exports.ChipList = exports.Checkbox = exports.Button = exports.ButtonGroup = exports.Box = exports.BarChart = exports.Banner = exports.Badge = exports.Accordion = exports.AccordionItem = void 0;\nexports.Tooltip = exports.TextField = exports.TextArea = exports.TaskList = exports.TaskListItem = exports.Tabs = void 0;\nconst jsx_runtime_1 = require(\"react/jsx-runtime\");\nconst react_1 = require(\"@remote-ui/react\");\nconst version_1 = require(\"../version\");\nconst withSdkProps = (Component) => {\n    const wrappedComponentName = Component.displayName || Component.toString();\n    const WithSdkProps = (props) => ((0, jsx_runtime_1.jsx)(Component, { ...props, wrappedComponentName: wrappedComponentName, sdkVersion: version_1.SDK_VERSION, schemaVersion: \"v9\" }));\n    WithSdkProps.wrappedComponentName = wrappedComponentName;\n    return WithSdkProps;\n};\nconst defineComponent = (name, fragmentProps, wrapWithSdkProps) => {\n    const remoteComponent = (0, react_1.createRemoteReactComponent)(name, {\n        fragmentProps,\n    });\n    if (!wrapWithSdkProps) {\n        return remoteComponent;\n    }\n    return withSdkProps(remoteComponent);\n};\nexports.AccordionItem = defineComponent('AccordionItem', ['title', 'actions', 'media', 'subtitle'], true);\nexports.Accordion = defineComponent('Accordion', [], true);\nexports.Badge = defineComponent('Badge', [], true);\nexports.Banner = defineComponent('Banner', ['actions', 'description', 'title'], true);\nexports.BarChart = defineComponent('BarChart', [], true);\nexports.Box = defineComponent('Box', [], true);\nexports.ButtonGroup = defineComponent('ButtonGroup', ['menuTrigger'], true);\nexports.Button = defineComponent('Button', [], true);\nexports.Checkbox = defineComponent('Checkbox', ['label'], true);\nexports.ChipList = defineComponent('ChipList', [], true);\nexports.Chip = defineComponent('Chip', [], true);\nexports.ContextView = defineComponent('ContextView', ['actions', 'banner', 'footerContent', 'primaryAction', 'secondaryAction'], true);\nexports.DateField = defineComponent('DateField', ['label'], true);\nexports.DetailPageModule = defineComponent('DetailPageModule', [], true);\nexports.Divider = defineComponent('Divider', [], true);\nexports.FocusView = defineComponent('FocusView', ['footerContent', 'primaryAction', 'secondaryAction'], true);\nexports.FormFieldGroup = defineComponent('FormFieldGroup', [], true);\nexports.Icon = defineComponent('Icon', [], true);\nexports.Img = defineComponent('Img', [], true);\nexports.Inline = defineComponent('Inline', [], true);\nexports.LineChart = defineComponent('LineChart', [], true);\nexports.Link = defineComponent('Link', [], true);\nexports.ListItem = defineComponent('ListItem', ['icon', 'image', 'secondaryTitle', 'title', 'value'], true);\nexports.List = defineComponent('List', [], true);\nexports.MenuGroup = defineComponent('MenuGroup', ['title'], true);\nexports.MenuItem = defineComponent('MenuItem', [], true);\nexports.Menu = defineComponent('Menu', ['trigger'], true);\nexports.OnboardingView = defineComponent('OnboardingView', ['error'], true);\nexports.PlatformConfigurationView = defineComponent('PlatformConfigurationView', [], true);\nexports.PropertyListItem = defineComponent('PropertyListItem', ['label', 'value'], true);\nexports.PropertyList = defineComponent('PropertyList', [], true);\nexports.Radio = defineComponent('Radio', ['label'], true);\nexports.Select = defineComponent('Select', ['label'], true);\nexports.SettingsView = defineComponent('SettingsView', [], true);\nexports.SignInView = defineComponent('SignInView', ['descriptionActionContents', 'footerContent'], true);\nexports.Sparkline = defineComponent('Sparkline', [], true);\nexports.Spinner = defineComponent('Spinner', [], true);\nexports.StripeFileUploader = defineComponent('StripeFileUploader', [], true);\nexports.Switch = defineComponent('Switch', ['label'], true);\nexports.TabList = defineComponent('TabList', [], true);\nexports.TabPanel = defineComponent('TabPanel', [], true);\nexports.TabPanels = defineComponent('TabPanels', [], true);\nexports.Tab = defineComponent('Tab', [], true);\nexports.TableBody = defineComponent('TableBody', [], true);\nexports.TableCell = defineComponent('TableCell', [], true);\nexports.TableFooter = defineComponent('TableFooter', [], true);\nexports.TableHead = defineComponent('TableHead', [], true);\nexports.TableHeaderCell = defineComponent('TableHeaderCell', [], true);\nexports.Table = defineComponent('Table', [], true);\nexports.TableRow = defineComponent('TableRow', [], true);\nexports.Tabs = defineComponent('Tabs', [], true);\nexports.TaskListItem = defineComponent('TaskListItem', [], true);\nexports.TaskList = defineComponent('TaskList', [], true);\nexports.TextArea = defineComponent('TextArea', ['label'], true);\nexports.TextField = defineComponent('TextField', ['label'], true);\nexports.Tooltip = defineComponent('Tooltip', ['trigger'], true);\n", "// AUTOGENERATED - DO NOT MODIFY\nimport CustomerDetails from '../src/views/CustomerDetails';\n\nexport * from '@stripe/ui-extension-sdk/version';\nexport const BUILD_TIME = '2025-08-13 01:22:34.331354 -0500 EST m=+1.359667668';\n\nexport { \n  CustomerDetails\t\n };\n\nexport default {\n  \"id\": \"com.pepperlytics.sales-tracker\",\n  \"version\": \"1.0.1\",\n  \"name\": \"Pepperlytics Sales Tracker\",\n  \"icon\": \"icon.png\",\n  \"permissions\": [\n    {\n      \"permission\": \"charge_read\",\n      \"purpose\": \"Read payment data to track and attribute sales to marketing campaigns\"\n    },\n    {\n      \"permission\": \"checkout_session_read\",\n      \"purpose\": \"Access checkout session data for sales attribution and tracking\"\n    },\n    {\n      \"permission\": \"customer_read\",\n      \"purpose\": \"Read customer information to enhance sales tracking and attribution\"\n    },\n    {\n      \"permission\": \"payment_intent_read\",\n      \"purpose\": \"Access payment intent data for comprehensive sales tracking\"\n    }\n  ],\n  \"connect_permissions\": null,\n  \"ui_extension\": {\n    \"views\": [\n      {\n        \"viewport\": \"stripe.dashboard.customer.detail\",\n        \"component\": \"CustomerDetails\"\n      }\n    ],\n    \"content_security_policy\": {\n      \"connect-src\": null,\n      \"image-src\": null,\n      \"purpose\": \"\"\n    }\n  },\n  \"distribution_type\": \"private\"\n};\n", "import { useCallback, useEffect, useState } from \"react\";\n\nimport {\n  Box,\n  Badge,\n  ContextView,\n  Divider,\n  Inline,\n  Link,\n  Spinner,\n  Table,\n  TableCell,\n  TableHeader,\n  TableHeaderCell,\n  TableRow,\n} from \"@stripe/ui-extension-sdk/ui\";\nimport type { ExtensionContextValue } from \"@stripe/ui-extension-sdk/context\";\n\nimport BrandIcon from \"./brand_icon.svg\";\n\n/**\n * This is a view that is rendered in the Stripe dashboard's customer detail page.\n * In stripe-app.json, this view is configured with stripe.dashboard.customer.detail viewport.\n */\nconst CustomerDetails = ({\n  userContext,\n  environment,\n}: ExtensionContextValue) => {\n  const [attributionData, setAttributionData] = useState<any[]>([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState<string | null>(null);\n\n  // Get customer ID from environment\n  const customerId = environment.objectContext?.id;\n\n  useEffect(() => {\n    const fetchAttributionData = async () => {\n      if (!customerId) {\n        setLoading(false);\n        return;\n      }\n\n      try {\n        // This would call your Pepperlytics API to get attribution data\n        // For now, showing mock data structure\n        const mockData = [\n          {\n            date: \"2024-01-15\",\n            campaign: \"YouTube Video: Building SaaS\",\n            short_code: \"ytb-123\",\n            amount: \"$49.99\",\n            source: \"Direct link click\"\n          },\n          {\n            date: \"2024-01-10\", \n            campaign: \"Blog Post: Marketing Tips\",\n            short_code: \"blog-456\",\n            amount: \"$29.99\",\n            source: \"Email campaign\"\n          }\n        ];\n        \n        setAttributionData(mockData);\n        setLoading(false);\n      } catch (err) {\n        setError(\"Failed to load attribution data\");\n        setLoading(false);\n      }\n    };\n\n    fetchAttributionData();\n  }, [customerId]);\n\n  return (\n    <ContextView\n      title=\"Sales Attribution\"\n      brandColor=\"#7C3AED\"\n      brandIcon={BrandIcon}\n      externalLink={{\n        label: \"Pepperlytics Dashboard\",\n        href: \"https://app.pepperlytics.com\",\n      }}\n    >\n      <Box css={{ stack: \"y\", gap: \"large\" }}>\n        <Box css={{ font: \"heading\" }}>Marketing Attribution</Box>\n        \n        {loading ? (\n          <Box css={{ align: \"center\", padding: \"large\" }}>\n            <Spinner size=\"large\" />\n          </Box>\n        ) : error ? (\n          <Box css={{ color: \"critical\", padding: \"medium\" }}>\n            {error}\n          </Box>\n        ) : attributionData.length === 0 ? (\n          <Box css={{ color: \"info\", padding: \"medium\" }}>\n            No attribution data found for this customer.\n          </Box>\n        ) : (\n          <Table>\n            <TableHeader>\n              <TableHeaderCell>Date</TableHeaderCell>\n              <TableHeaderCell>Campaign</TableHeaderCell>\n              <TableHeaderCell>Amount</TableHeaderCell>\n              <TableHeaderCell>Source</TableHeaderCell>\n            </TableHeader>\n            {attributionData.map((item, index) => (\n              <TableRow key={index}>\n                <TableCell>{item.date}</TableCell>\n                <TableCell>\n                  <Box css={{ stack: \"y\", gap: \"small\" }}>\n                    <Box>{item.campaign}</Box>\n                    <Badge type=\"neutral\">{item.short_code}</Badge>\n                  </Box>\n                </TableCell>\n                <TableCell css={{ font: \"heading\" }}>{item.amount}</TableCell>\n                <TableCell>{item.source}</TableCell>\n              </TableRow>\n            ))}\n          </Table>\n        )}\n\n        <Divider />\n        \n        <Box css={{ color: \"info\", fontSize: \"small\" }}>\n          Track marketing attribution and campaign performance with{\" \"}\n          <Link\n            external\n            href=\"https://app.pepperlytics.com\"\n            target=\"_blank\"\n          >\n            Pepperlytics\n          </Link>\n          . This shows which campaigns and links led to this customer's purchases.\n        </Box>\n      </Box>\n    </ContextView>\n  );\n};\n\nexport default CustomerDetails;\n"],
  "mappings": "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",
  "names": ["require_version", "__commonJSMin", "exports", "require_ui", "__commonJSMin", "exports", "jsx_runtime_1", "react_1", "version_1", "withSdkProps", "Component", "wrappedComponentName", "WithSdkProps", "props", "__spreadProps", "__spreadValues", "defineComponent", "name", "fragmentProps", "wrapWithSdkProps", "remoteComponent", "manifest_exports", "__export", "BUILD_TIME", "CustomerDetails_default", "manifest_default", "import_react", "import_ui", "import_jsx_runtime", "CustomerDetails", "userContext", "environment", "_a", "attributionData", "setAttributionData", "loading", "setLoading", "error", "setError", "customerId", "__async", "err", "brand_icon_default", "item", "index", "CustomerDetails_default", "__reExport", "manifest_exports", "BUILD_TIME", "manifest_default"]
}
